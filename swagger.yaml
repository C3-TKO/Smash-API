swagger: '2.0'

info:
  version: "0.0.1"
  title: Smash API
  description: API for http://smash.cologne

host: smash.cologne
basePath: /api
schemes:
  - http
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
consumes:
  - application/json
produces:
  - application/json
  - application/problem+json

paths:
  /players:
    get:
      description: |
        Gets a list of `Player` objects.
      parameters:
        - $ref: '#/parameters/pageNumber'
        - $ref: '#/parameters/pageSize'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              items:
                type: array
                minItems: 0
                maxItems: 100
                uniqueItems: true
                items:
                  $ref: '#/definitions/Player'
              total:
                type: integer
              count:
                type: integer
              _links:
                $ref: '#/definitions/PaginationLinks'
    post:
      description: |
        Creates a new `Player` model
      parameters:
        - name: player
          in: body
          description: The update player model
          schema:
            $ref: '#/definitions/Player'
          required: true
      responses:
        201:
          $ref: '#/responses/201'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
  /players/{id}:
    get:
      description: |
        Gets a specific `Player` object identified by its id
      parameters:
        - name: id
          in: path
          type: number
          format: integer
          description: ID of the player
          required: true
      responses:
        200:
          description: Succesful response
          schema:
            $ref: '#/definitions/Player'
        404:
          $ref: '#/responses/404'
    put:
      description: |
        Updates a specific `Player` model identified by its id
      parameters:
        - name: id
          in: path
          type: number
          format: integer
          description: ID of the player
          required: true
        - name: player
          in: body
          description: The player model to be updated
          schema:
            $ref: '#/definitions/Player'
          required: true
      responses:
        200:
          description: Succesful response
        400:
          $ref: '#/responses/400'
        404:
          $ref: '#/responses/404'
    delete:
      description: |
        Deletes a `Player` model
      parameters:
        - name: id
          in: path
          type: number
          format: integer
          description: ID of the player
          required: true
      responses:
        200:
          description: Player deleted
  /tokens:
    post:
      description: Creates a JWT authentication token
      security:
       - basicAuth: []
      responses:
        200:
          description: Token created
          schema:
            type: object
            properties:
              token:
                type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'

definitions:
  Player:
    type: object
    description: A model describing a badminton player
    properties:
      id:
        type: number
        format: integer
        description: Unique identifier representing a specific player.
      name:
        type: string
        description: Name of a player.

  PaginationLinks:
    type: object
    properties:
      self:
        type: string
        description: URI of this collection
        format: url
      first:
        type: string
        description: URI of the first set of this collection
        format: url
      last:
        type: string
        description: URI of the last set of this collection
        format: url
      prev:
        type: string
        description: URI of the previous set of this collection
        format: url
      next:
        type: string
        description: URI of the next set of this collection
        format: url
    required:
    - self
    - first
    - last

responses:
  201:
    description: Created
    headers:
      Location:
        description: URI of the created resource
        type: string
        format: url
  400:
    description: Bad Request
    schema:
      type: object
      properties:
        status:
          type: integer
        type:
          type: string
        title:
          type: string
  401:
    description: Unauthorized
    schema:
      type: object
      properties:
        detail:
          type: string
        status:
          type: integer
        type:
          type: string
        title:
          type: string
  404:
    description: Not Found
    schema:
      type: object
      properties:
        detail:
          type: string
        status:
          type: integer
        type:
          type: string
        title:
          type: string

parameters:
  pageSize:
    name: pageSize
    in: query
    description: Number of entities returned
    type: integer
    default: 20
    required: false

  pageNumber:
    name: pageNumber
    in: query
    description: Page number
    type: integer
    default: 1
    maximum: 100
    minimum: 1
    required: false