swagger: '2.0'

info:
  version: "0.0.1"
  title: Smash API
  description: API for http://smash.cologne

host: smash.cologne
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /players:
    get:
      description: |
        Gets `Player` objects.
        Optional query param of **size** determines
        size of returned array
      parameters:
        - name: size
          in: query
          description: Size of array
          type: number
          format: int
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfPlayers
            type: array
            items:
              $ref: '#/definitions/Player'
    post:
      description: |
        Creates a new `Player` model
      parameters:
        - name: player
          in: body
          description: The update player model
          schema:
            $ref: '#/definitions/Player'
          required: true
      responses:
        201:
          description: Succesfully created
          headers:
            Location:
              description: Shows the url of the created player
              type: string

  /players/{id}:
    get:
      description: |
        Gets a specific `Player` object identified by its id
      parameters:
        - name: id
          in: path
          type: number
          format: int
          description: ID of the player
          required: true
      responses:
        200:
          description: Succesful response
          schema:
            $ref: '#/definitions/Player'
    put:
      description: |
        Updates a specific `Player` model identified by its id
      parameters:
        - name: id
          in: path
          type: number
          format: int
          description: ID of the player
          required: true
        - name: player
          in: body
          description: The player model to be updated
          schema:
            $ref: '#/definitions/Player'
          required: true
      responses:
        200:
          description: Succesful response
    delete:
      description: |
        Deletes a `Player` model
      parameters:
        - name: id
          in: path
          type: number
          format: int
          description: ID of the player
          required: true
      responses:
        200:
          description: OK

definitions:
  Player:
    type: object
    properties:
      id:
        type: number
        format: int
        description: Unique identifier representing a specific player.
      name:
        type: string
        description: Name of a player.